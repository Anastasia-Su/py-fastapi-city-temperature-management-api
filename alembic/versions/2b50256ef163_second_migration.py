"""'second_migration'

Revision ID: 2b50256ef163
Revises: f7d6f2e9cc62
Create Date: 2024-04-24 19:00:31.632487

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision: str = "2b50256ef163"
down_revision: Union[str, None] = "f7d6f2e9cc62"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


# def upgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.create_unique_constraint(None, 'city', ['name'])
#     # ### end Alembic commands ###
#
#
# def downgrade() -> None:
#     # ### commands auto generated by Alembic - please adjust! ###
#     op.drop_constraint(None, 'city', type_='unique')
#     # ### end Alembic commands ###


def upgrade():
    pass
    # # Add a new column without the unique constraint
    # op.add_column("city", sa.Column("new_name1", sa.String))
    #
    # # Copy data from the existing column to the new column
    # connection = op.get_bind()
    # connection.execute(text("UPDATE city SET new_name1 = name"))
    #
    # # Remove the existing column
    # op.drop_column("city", "name")
    #
    # # Rename the new column and add the unique constraint
    # op.alter_column("city", "new_name1", new_column_name="name")
    # op.create_unique_constraint(None, "city", ["name"])
    #


def downgrade():
    pass
